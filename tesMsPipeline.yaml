trigger:
 branches:
   include:
     - master
 paths:
  exclude:
    - tesMsPipeline.yaml
    - fgDockerBuild-pipelines.yml
    - Dockerfilefg
    - devops/**

resources:
  repositories:
    - repository: devops
      type: git
      name: DevopsProjects/DevopsProjects
variables:
  - group: Tesdev
pool:
  vmImage: ubuntu-latest
parameters:
  - name: updatesettings
    type: string
    default: 'false'
    values:
      - 'true'
      - 'false'
stages:
  - template: templates/lambdaDocker.yaml@devops
    parameters:
      DOCKER_REPOSITORY_NAME: 'test'
      dockerfilepath : '.'
      ecrAwsAccount : 'TESAWSDEV'
      ecrAwsregion : $(AWSREGION)
      lambdaname : 'WillC_users'
      LibraryDev : 'Tesdev'
      LibraryQa : 'Tesdev'
      LibraryProd : 'Tesdev'
      awsdevCredentials : 'TESAWSDEV'
      awsqaCredentials : 'TESAWSDEV'
      awsProdCredentials : 'TESAWSDEV'
      Nestjs : 'true'
      generatePrisma: 'true'
      generatePrismaPkgName: 'testgetprismaclient'
      NodeVersion : '20.x'
      updatesettings: ${{ parameters.updatesettings }}
      appsettings:
        delay: '1'
        dev:
          memorysize: 128
          timeout: 480
          envvar: '{AWSREGION=$(AWSREGION),environment=$(environment),AWS_SECRET_ID=$(AWS_SECRET_ID),QUEUE_WILLS_COMMUNICATIONS=$(QUEUE_WILLS_COMMUNICATIONS),BUCKET_WILL=$(BUCKET_WILL),QUEUE_GENERATE_PDF=$(QUEUE_GENERATE_PDF),PPERRORMANAGEMENT=$(PPERRORMANAGEMENT),GETSNSTOPICARN=$(GETSNSTOPICARN),SQSCOMM_NOWAIT_QUEUE=$(SQSCOMM_NOWAIT_QUEUE),EMAIL_FROM=$(EMAIL_FROM),SG_SEND_WILLS=$(SG_SEND_WILLS),signer_url_base=$(signer_url_base),signer_authorization=$(signer_authorization),signer_org_string=$(signer_org_string),signer_t003c002=$(signer_t003c002),signer_t003c004=$(signer_t003c004),signer_idcat=$(signer_idcat),signer_idsol=$(signer_idsol),signer_org=$(signer_org),signer_tipo=$(signer_tipo),signer_perfil=$(signer_perfil),signer_flujofirma=$(signer_flujofirma),signer_hd=$(signer_hd),SG_SEND_WELCOME=$(SG_SEND_WELCOME)}'

        qa:
          memorysize: 256
          timeout: 480
          envvar: '{AWSREGION=$(AWSREGION),environment=$(environment),AWS_SECRET_ID=$(AWS_SECRET_ID),QUEUE_WILLS_COMMUNICATIONS=$(QUEUE_WILLS_COMMUNICATIONS),BUCKET_WILL=$(BUCKET_WILL),QUEUE_GENERATE_PDF=$(QUEUE_GENERATE_PDF),PPERRORMANAGEMENT=$(PPERRORMANAGEMENT),GETSNSTOPICARN=$(GETSNSTOPICARN),SQSCOMM_NOWAIT_QUEUE=$(SQSCOMM_NOWAIT_QUEUE),EMAIL_FROM=$(EMAIL_FROM),SG_SEND_WILLS=$(SG_SEND_WILLS),signer_url_base=$(signer_url_base),signer_authorization=$(signer_authorization),signer_org_string=$(signer_org_string),signer_t003c002=$(signer_t003c002),signer_t003c004=$(signer_t003c004),signer_idcat=$(signer_idcat),signer_idsol=$(signer_idsol),signer_org=$(signer_org),signer_tipo=$(signer_tipo),signer_perfil=$(signer_perfil),signer_flujofirma=$(signer_flujofirma),signer_hd=$(signer_hd),SG_SEND_WELCOME=$(SG_SEND_WELCOME)}'

        prod:
          memorysize: 512
          timeout: 480
          envvar: '{AWSREGION=$(AWSREGION),environment=$(environment),AWS_SECRET_ID=$(AWS_SECRET_ID),QUEUE_WILLS_COMMUNICATIONS=$(QUEUE_WILLS_COMMUNICATIONS),BUCKET_WILL=$(BUCKET_WILL),QUEUE_GENERATE_PDF=$(QUEUE_GENERATE_PDF),PPERRORMANAGEMENT=$(PPERRORMANAGEMENT),GETSNSTOPICARN=$(GETSNSTOPICARN),SQSCOMM_NOWAIT_QUEUE=$(SQSCOMM_NOWAIT_QUEUE),EMAIL_FROM=$(EMAIL_FROM),SG_SEND_WILLS=$(SG_SEND_WILLS),signer_url_base=$(signer_url_base),signer_authorization=$(signer_authorization),signer_org_string=$(signer_org_string),signer_t003c002=$(signer_t003c002),signer_t003c004=$(signer_t003c004),signer_idcat=$(signer_idcat),signer_idsol=$(signer_idsol),signer_org=$(signer_org),signer_tipo=$(signer_tipo),signer_perfil=$(signer_perfil),signer_flujofirma=$(signer_flujofirma),signer_hd=$(signer_hd),SG_SEND_WELCOME=$(SG_SEND_WELCOME)}'